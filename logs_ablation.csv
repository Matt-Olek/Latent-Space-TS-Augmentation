dataset,num_classes,num_train_samples,num_test_samples,vae_best_acc,vae_best_f1,classifier_best_acc,classifier_best_f1,classifier_augmented_step_0_best_acc,classifier_augmented_step_0_best_f1,vae_augmented_step_1_best_acc,vae_augmented_step_1_best_f1,classifier_augmented_step_1_best_acc,classifier_augmented_step_1_best_f1,vae_augmented_step_2_best_acc,vae_augmented_step_2_best_f1,classifier_augmented_step_2_best_acc,classifier_augmented_step_2_best_f1,vae_augmented_step_3_best_acc,vae_augmented_step_3_best_f1,classifier_augmented_step_3_best_acc,classifier_augmented_step_3_best_f1,execution_time
FordB,2,3636,810,0.7098765969276428,0.709642433847745,0.7802469135802469,0.7800256910398619,0.7765432098765432,0.7763683943884705,0.7135802507400513,0.7134387351778656,0.7777777777777778,0.7742070759568161,0.7086420059204102,0.7086259877085163,0.7790123456790123,0.778771999175688,0.7098765969276428,0.7094509714732293,0.7691358024691358,0.7663232708082126,3414.283396244049
FreezerRegularTrain,2,150,2850,0.9743859767913818,0.9743700584135997,0.9898245614035087,0.9898244599299791,0.9933333333333333,0.9933332340192449,0.9891228675842285,0.98912168068125,0.992280701754386,0.9922806979529445,0.9785965085029602,0.9785879263986297,0.9926315789473684,0.9926315054665364,0.9796491861343384,0.9796423456943992,0.9919298245614036,0.9919297043390859,586.2131052017212
FreezerSmallTrain,2,28,2850,0.8098245859146118,0.8097562633750695,0.8354385964912281,0.8353364026846333,0.8449122807017544,0.8443049502052697,0.8126316070556641,0.8125869089880949,0.8442105263157895,0.8419072872569826,0.8178947567939758,0.8150247452783883,0.8442105263157895,0.8425806130573249,0.816140353679657,0.8130914577764917,0.8417543859649123,0.840963343804623,327.0774939060211
"Found array with 1 sample(s) (shape=(1, 50)) while a minimum of 2 is required by GaussianMixture."
"Input X contains NaN.
GaussianMixture does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values"
"Input X contains NaN.
GaussianMixture does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values"
"Input X contains NaN.
GaussianMixture does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values"
"Input X contains NaN.
GaussianMixture does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values"
"Input X contains NaN.
GaussianMixture does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values"
GunPoint,2,50,150,0.9666666984558105,0.9666651851193386,0.9866666666666667,0.9866666666666667,0.9866666666666667,0.9866666666666667,0.9600000381469727,0.9599928876244666,0.9933333333333333,0.993333629642799,0.9600000381469727,0.9599928876244666,0.9933333333333333,0.993333629642799,0.9533333778381348,0.9533146591970121,0.9866666666666667,0.9866666666666667,141.85247111320496
GunPointAgeSpan,2,135,316,0.9841772317886353,0.9841770567322617,0.9936708860759493,0.9936708860759493,0.9620253164556962,0.9620207512763481,0.9113924503326416,0.9112644415917843,0.9778481012658228,0.9778434422387773,0.8544303774833679,0.8539565164972069,0.9493670886075949,0.9492694829952721,0.8860759735107422,0.8850398156756538,0.9841772151898734,0.9841776906007964,353.17124462127686
GunPointMaleVersusFemale,2,135,316,1.0,1.0,0.9968354430379747,0.9968359194795887,0.9936708860759493,0.9936708860759493,1.0,1.0,0.9936708860759493,0.9936708860759493,1.0,1.0,0.990506329113924,0.9905077584387657,1.0,1.0,0.9936708860759493,0.9936726642737205,298.1422598361969
GunPointOldVersusYoung,2,136,315,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,145.31751227378845
Ham,2,109,105,0.761904776096344,0.7546958228202971,0.6857142857142857,0.6819745014710691,0.6857142857142857,0.679643951554064,0.761904776096344,0.7615587246798075,0.6857142857142857,0.6812448056145535,0.7428571581840515,0.7405034324942792,0.6761904761904762,0.6735771931663348,0.7714285850524902,0.7704081632653061,0.7047619047619048,0.6964275765092925,235.80571866035461
